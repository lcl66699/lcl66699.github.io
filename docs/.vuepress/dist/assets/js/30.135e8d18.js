(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{397:function(s,a,t){"use strict";t.r(a);var e=t(42),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[s._v("#")]),s._v(" webpack")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("基本概念")]),s._v(" "),t("ul",[t("li",[s._v("entry :入口 webpack执行第一步从entry开始.可抽象成输入")]),s._v(" "),t("li",[s._v("Moudule: 模块,在webpack中一切皆模块,一个模块对应一个文件,webpack会从配置的entry开始,递归找出所有依赖的模块")]),s._v(" "),t("li",[s._v("chunk:代码块,一个chunk由多个模块组成,用于代码的合并和分割")]),s._v(" "),t("li",[s._v("loader:模块转换器,用于讲模块的原内容按照需求转换新内容")]),s._v(" "),t("li",[s._v("plugin:扩展插件,在webpack构建流程中的特定时机会广播对应的事件,插件可以监听这些事件的发生,在特定的时机去做对应的事情")])])]),s._v(" "),t("h2",{attrs:{id:"经典问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#经典问题"}},[s._v("#")]),s._v(" 经典问题")]),s._v(" "),t("h3",{attrs:{id:"webpack中的module是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack中的module是什么"}},[s._v("#")]),s._v(" webpack中的Module是什么？")]),s._v(" "),t("p",[s._v("前端模块\nwepack支持 ESModule、CommonJs、AMD、Assets(image,font,video,audio,json)")]),s._v(" "),t("ol",[t("li",[s._v("ESModule")])]),s._v(" "),t("p",[s._v("关键字 export import")]),s._v(" "),t("ol",[t("li",[s._v("Commonjs")])]),s._v(" "),t("p",[s._v("关键字 module.exports require")]),s._v(" "),t("p",[s._v("package.json")]),s._v(" "),t("p",[s._v("type:module -> ESM\ntype:commonjs -> cjs 强制使用cmj模块")]),s._v(" "),t("h3",{attrs:{id:"webpack-modules-如何表达自己的各种依赖关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-modules-如何表达自己的各种依赖关系"}},[s._v("#")]),s._v(" webpack modules,如何表达自己的各种依赖关系")]),s._v(" "),t("ul",[t("li",[s._v("ESM import 语句")]),s._v(" "),t("li",[s._v("CommonJS require() 语句")]),s._v(" "),t("li",[s._v("AMD define 和 require 语句")]),s._v(" "),t("li",[s._v("css/sass/less 文件中的 @import 语句。")]),s._v(" "),t("li",[s._v("stylesheet url(...) 或者 HTML "),t("code",[s._v("<img src=...>")]),s._v("文件中的图片链接。")])]),s._v(" "),t("h3",{attrs:{id:"常说的-chunk和bundle的区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常说的-chunk和bundle的区别是什么"}},[s._v("#")]),s._v(" *常说的 chunk和bundle的区别是什么？")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("chunk(过程)\nchunk是webpack打包过程中Modules的集合，是"),t("span",{staticStyle:{color:"red"}},[s._v("打包过程中的概念")]),s._v("\nwebpack打包从一个入口模块开始，入口模块引用其他模块，其他模块又引用其他模块...\n通过引用关系逐个打包模块，这些module形成了chunk")]),s._v(" "),t("p",[s._v("如果有多个入口文件，会产生多个打包路径，每条路径都会形成各自的chunk。")])]),s._v(" "),t("li",[t("p",[s._v("bundle(结果)\n是我们最终输出的一个或多个打包好的文件。")])])]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("区别")]),s._v(" "),t("p",[s._v("大多数情况下，一个chunk会产生一个bundle，但是也有例外。\n比如当我们开启source-map后, chunk和bundle就不是一对一的关系了。下面代码是一个\nchunk对应两个bundle。chunk是过程中的代码块，bundle是打包结果输出的代码块，chunk在构建完成后就会变成bundle")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    mode"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"production"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    entry"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        index"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/index.js"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    output"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[name].js"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    devtool"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"source-map"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"文件指纹"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件指纹"}},[s._v("#")]),s._v(" 文件指纹")]),s._v(" "),t("p",[s._v("加hash  在chunk上")]),s._v(" "),t("h2",{attrs:{id:"函数式编程理论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程理论"}},[s._v("#")]),s._v(" 函数式编程理论")]),s._v(" "),t("h3",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[s._v("#")]),s._v(" 特点")]),s._v(" "),t("ul",[t("li",[s._v("vue3 react 16.8 全面化函数的推动")]),s._v(" "),t("li",[s._v("函数式编程使代码单元测试更独立 tree shaking过程流畅 方便做ut")]),s._v(" "),t("li",[s._v("减少对this依赖")]),s._v(" "),t("li",[s._v("js天生友好的函数式编程 ramda loadsh")])]),s._v(" "),t("h3",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),t("ul",[t("li",[s._v("抽象运算过程")]),s._v(" "),t("li",[s._v("并非过程运算 是一种函数的映射")]),s._v(" "),t("li",[s._v("幂等 相同的输入始终得到相同的输出")])]),s._v(" "),t("h3",{attrs:{id:"纯函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#纯函数"}},[s._v("#")]),s._v(" 纯函数")]),s._v(" "),t("h3",{attrs:{id:"数组长度未知-取最后一项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组长度未知-取最后一项"}},[s._v("#")]),s._v(" 数组长度未知，取最后一项")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("first")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("arr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("reverse")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("arr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reverse")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" last"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("compose")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("reverse"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("module.exports.pitch")]),s._v(" "),t("p",[s._v("babel")]),s._v(" "),t("p",[s._v("loader过程中添油加醋")]),s._v(" "),t("p",[s._v("plugin")]),s._v(" "),t("ul",[t("li",[s._v("loader提供的方法 是动词 翻译馆")]),s._v(" "),t("li",[s._v("plugins 插件 是类class")])])])}),[],!1,null,null,null);a.default=n.exports}}]);