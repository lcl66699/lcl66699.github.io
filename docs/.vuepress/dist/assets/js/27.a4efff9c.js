(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{393:function(t,s,a){"use strict";a.r(s);var r=a(42),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前端安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端安全"}},[t._v("#")]),t._v(" 前端安全")]),t._v(" "),a("h1",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),a("ul",[a("li",[t._v("cdn（静态资源存放）缓存 cdn预热（可遇见的活动，比如哪个路径资源需要提前预热）：提前让cdn没有经过用户请求的时候，直接拉取原服务器资源，做一份缓存。")]),t._v(" "),a("li",[t._v("cdn刷新机制")])]),t._v(" "),a("h2",{attrs:{id:"xss-cross-site-scripting-跨站脚本攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-cross-site-scripting-跨站脚本攻击"}},[t._v("#")]),t._v(" XSS （cross-site scripting，跨站脚本攻击")]),t._v(" "),a("p",[t._v("攻击者想尽一切办法把恶意代码注入到网页中")]),t._v(" "),a("h3",{attrs:{id:"外在表现上-有哪些攻击场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外在表现上-有哪些攻击场景"}},[t._v("#")]),t._v(" 外在表现上，有哪些攻击场景？")]),t._v(" "),a("ol",[a("li",[t._v("可输入到地方植入js代码（评论区等）存储型")]),t._v(" "),a("li",[t._v("url上拼接js代码")])]),t._v(" "),a("h3",{attrs:{id:"技术角度上-有哪些类型的攻击-分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技术角度上-有哪些类型的攻击-分类"}},[t._v("#")]),t._v(" 技术角度上，有哪些类型的攻击（分类）？")]),t._v(" "),a("ol",[a("li",[t._v("存储型 server （持久型）\n论坛发帖，商品评价，用户私信等用户保存数据的网站")])]),t._v(" "),a("ul",[a("li",[t._v("攻击步骤：\n"),a("ul",[a("li",[t._v("攻击者将恶意代码提交到目标网站的数据库中")]),t._v(" "),a("li",[t._v("用户打开目标网站的时候，服务端将评论（恶意代码）从数据库取出，返回到浏览器")]),t._v(" "),a("li",[t._v("用户浏览器收到html后，混在其中的恶意代码就会被执行")]),t._v(" "),a("li",[t._v("窃取用户数据，发送到攻击者网站")])])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("反射型 Server （非持久）")])]),t._v(" "),a("p",[t._v("攻击者结合各种手段，诱导用户点击恶意url。通过url传参数的功能，比如网站的搜索或者跳转")]),t._v(" "),a("ul",[a("li",[t._v("攻击步骤：\n"),a("ul",[a("li",[t._v("攻击者构造自己恶意的url")]),t._v(" "),a("li",[t._v("直接执行可执行的恶意代码")])])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Dom型 Browser浏览器端")])]),t._v(" "),a("p",[t._v("取出和执行恶意代码的操作，由浏览器完成，在地址栏输入javascript代码\nxss-demo网址：alf.nu/alert1")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" search"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("queryObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redirectUrl\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//比如在地址栏输入以下代码 1：00")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("’script’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nscript"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("‘text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("javascript’\nscrpt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nscript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("‘remote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js’"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//攻击者的恶意代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementByTagName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("’script’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("攻击步骤：")]),t._v(" "),a("ul",[a("li",[t._v("url参数")])]),t._v(" "),a("h3",{attrs:{id:"防范xss攻击方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防范xss攻击方法"}},[t._v("#")]),t._v(" 防范xss攻击方法？")]),t._v(" "),a("p",[t._v("主旨：防止攻击者提交恶意代码，防止浏览器执行恶意代码")]),t._v(" "),a("ol",[a("li",[t._v("转译用户内容，对数据进行严格的输入编码，比如html元素，js，css，url\nvue html\nreact dangerouslyHtml")]),t._v(" "),a("li",[t._v("CSP Content Security Policy\n"),a("ul",[a("li",[t._v("default-src ‘self‘ 所有加载的内容必须来自站点同一个源（有可信的域名在后面➕    *xxx.com")])])]),t._v(" "),a("li",[t._v("输入验证，严格的数据校验")]),t._v(" "),a("li",[t._v("开启浏览器的xss防御：开启http Only Cookie")]),t._v(" "),a("li",[t._v("验证码")])]),t._v(" "),a("h2",{attrs:{id:"csrf-跨站请求伪造"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf-跨站请求伪造"}},[t._v("#")]),t._v(" CSRF 跨站请求伪造")]),t._v(" "),a("p",[t._v("corss-site request forgery")]),t._v(" "),a("h3",{attrs:{id:"攻击步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#攻击步骤"}},[t._v("#")]),t._v(" 攻击步骤")]),t._v(" "),a("ol",[a("li",[t._v("受害者登录 a.com 并且保留了登录凭证cookie")]),t._v(" "),a("li",[t._v("攻击者诱导用户访问另一个网站 b.com，如果没安全策略限制.")]),t._v(" "),a("li",[t._v("b.com 向 a.com 发送请求，浏览器会自动带上 a.com 的cookie")]),t._v(" "),a("li",[t._v("攻击者在用户不知情的情况下，冒充用户在 a.com 执行了自定义操作")])]),t._v(" "),a("h3",{attrs:{id:"攻击类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#攻击类型"}},[t._v("#")]),t._v(" 攻击类型")]),t._v(" "),a("h5",{attrs:{id:"get型-在页面中的某个img发起一个get请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get型-在页面中的某个img发起一个get请求"}},[t._v("#")]),t._v(" get型 ：在页面中的某个img发起一个get请求")]),t._v(" "),a("h5",{attrs:{id:"post型-自动提交表单到恶意网站"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post型-自动提交表单到恶意网站"}},[t._v("#")]),t._v(" post型：自动提交表单到恶意网站")]),t._v(" "),a("h5",{attrs:{id:"诱导用户点击链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#诱导用户点击链接"}},[t._v("#")]),t._v(" 诱导用户点击链接")]),t._v(" "),a("h3",{attrs:{id:"防范方法-csrf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防范方法-csrf"}},[t._v("#")]),t._v(" 防范方法-csrf")]),t._v(" "),a("p",[t._v("csrf一般都是发生在第三方域名，攻击者无法获取到cookie信息的。")]),t._v(" "),a("ol",[a("li",[t._v("同源检测")]),t._v(" "),a("li",[t._v("cookie SamSite 控制cookie策略\n"),a("ul",[a("li",[t._v("strict属性：完全禁用第三方cookie")]),t._v(" "),a("li",[t._v("Lax：post img iframe 不会携带cookie")]),t._v(" "),a("li",[t._v("None:不设置")])])]),t._v(" "),a("li",[a("h5",{attrs:{id:"提交请求的时候附加额外信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交请求的时候附加额外信息"}},[t._v("#")]),t._v(" 提交请求的时候附加额外信息")]),t._v(" "),a("ol",[a("li",[t._v("csrf token\n"),a("ul",[a("li",[t._v("用户每次打开页面的时候，服务端利用机密算法生成token")]),t._v(" "),a("li",[t._v("每次加载的时候，前端把获取到的token，在请求时候携带token")]),t._v(" "),a("li",[t._v("服务端每次接受请求后，进行校验token")])])]),t._v(" "),a("li",[t._v("双重cookie\n"),a("ul",[a("li",[t._v("用户在访问网站的时候，服务端向浏览器注入一个额外的cookie")]),t._v(" "),a("li",[t._v("每次发送请求，拼上去，服务端在检验")]),t._v(" "),a("li",[a("h5",{attrs:{id:"以上这么做cookie肯定不是http-only-一旦遭受css攻击-cookie被窃取到-即凉凉。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以上这么做cookie肯定不是http-only-一旦遭受css攻击-cookie被窃取到-即凉凉。"}},[t._v("#")]),t._v(" 以上这么做cookie肯定不是http only，一旦遭受css攻击，cookie被窃取到，即凉凉。")])])])])])])]),t._v(" "),a("h2",{attrs:{id:"https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),a("h2",{attrs:{id:"csp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csp"}},[t._v("#")]),t._v(" CSP")]),t._v(" "),a("p",[t._v("内容安全策略，可以禁止加载外域的代码，禁止外域的提交")]),t._v(" "),a("h2",{attrs:{id:"hsts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hsts"}},[t._v("#")]),t._v(" HSTS")]),t._v(" "),a("p",[t._v("强制客户端使用https与服务端建立连接")]),t._v(" "),a("h2",{attrs:{id:"x-frame-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-frame-options"}},[t._v("#")]),t._v(" X-Frame-Options")]),t._v(" "),a("p",[t._v("控制当前页面是否被嵌入到iframe中")]),t._v(" "),a("h2",{attrs:{id:"sri-subresouce-intergrity-子资源的完整性-传到服务器或cdn上的资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sri-subresouce-intergrity-子资源的完整性-传到服务器或cdn上的资源"}},[t._v("#")]),t._v(" SRI （subresouce intergrity 子资源的完整性，传到服务器或cdn上的资源")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("1. xxx.js 注入到index.js ，并且上传到cdn\n2. 用户在请求的时候，根据xxx.js,去请求，但是这个文件可能被篡改\n3. 打包的时候根据js文件生产一个hash值，并且把hash作为intergrity属性注入到script上\n4. 当浏览器在用户端请求的时候，拿到这个文件做hash，做对比，不一样，则不安全。\n")])])]),a("h2",{attrs:{id:"referer-policy-控制referer的携带策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#referer-policy-控制referer的携带策略"}},[t._v("#")]),t._v(" Referer-Policy（控制referer的携带策略）")]),t._v(" "),a("h2",{attrs:{id:"node-服务端-相关的安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-服务端-相关的安全"}},[t._v("#")]),t._v(" Node（服务端）相关的安全：")]),t._v(" "),a("h3",{attrs:{id:"本地文件操作相关-静态资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地文件操作相关-静态资源"}},[t._v("#")]),t._v(" 本地文件操作相关，静态资源")]),t._v(" "),a("p",[t._v("比如提供一个静态服务，通过请求url参数来返回用户要的数据，攻击者通过请求参数输入奇怪的路径 比如：localhost：8080/?/../../text.js来查看本不应该看到的文件")]),t._v(" "),a("ul",[a("li",[t._v("express.static")]),t._v(" "),a("li",[t._v("koa-static")]),t._v(" "),a("li",[t._v("resolve-path")])]),t._v(" "),a("h3",{attrs:{id:"redos-正则表达式攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redos-正则表达式攻击"}},[t._v("#")]),t._v(" ReDos 正则表达式攻击")]),t._v(" "),a("p",[t._v("利用正则表达式的回溯特点，每当一次匹配不成，就会尝试回溯到上一个字符，来验证能不能有其他组合来匹配这个字符串，会走很多步，占用服务器资源，造成宕机。")]),t._v(" "),a("p",[t._v("测试网站： regex.rip")]),t._v(" "),a("h3",{attrs:{id:"时序攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时序攻击"}},[t._v("#")]),t._v(" 时序攻击")]),t._v(" "),a("p",[t._v("攻击者通过不停尝试，大量推断，大量分析代码执行执行来推导出他想知道的密码或信息。")]),t._v(" "),a("h3",{attrs:{id:"ip-origin-referrer-request-headers校验-防止爬虫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip-origin-referrer-request-headers校验-防止爬虫"}},[t._v("#")]),t._v(" ip origin || referrer || request headers校验（防止爬虫）")]),t._v(" "),a("h3",{attrs:{id:"实现一个截图服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现一个截图服务"}},[t._v("#")]),t._v(" 实现一个截图服务")]),t._v(" "),a("p",[t._v("node中的：puppeter-chromium-resolver")])])}),[],!1,null,null,null);s.default=e.exports}}]);